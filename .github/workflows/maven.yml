# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  EXTRACTED_DIR: target/extracted

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: build and extracted
      run: java -Djarmode=layertools -jar target/*.jar extract --destination ${{ env.EXTRACTED_DIR }}
    - name: Docker Setup Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1.6.0
    - name: Cache Docker layers
      uses: actions/cache@v2.1.7
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
        restore-keys: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile') }}
    - name: Docker Metadata action
      id: docker-meta
      uses: docker/metadata-action@v3.6.2
      with:
        images: ${{ secrets.DOCKER_HUB_NAME }}/demo
        tags: $GITHUB_RUN_NUMBER
    - name: Docker Login
      uses: docker/login-action@v1.12.0
      with:
        username: ${{ secrets.DOCKER_HUB_NAME }}
        password: ${{ secrets.DOCKER_HUB_PWD }}
        logout: true
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./
        push: true
        tags: ${{ steps.docker-meta.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
